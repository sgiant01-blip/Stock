import pandas as pd

# 1. 전략 파일과 실적 파일 불러오기
seg_df = pd.read_csv("TA_segmented.csv")
value_df = pd.read_csv("TA_Value.csv")

# 2. 필요한 보조지표만 추출
indicators = seg_df['indicator'].unique().tolist()
essential_cols = ['Date', 'Code', 'Close', 'Stage']
selected_cols = essential_cols + [col for col in indicators if col in value_df.columns]
value_df = value_df[selected_cols]

# 3. 날짜 정렬
value_df['Date'] = pd.to_datetime(value_df['Date'])
value_df.sort_values(by='Date', inplace=True)

# 4. 결과 저장용 리스트
results = []

# 5. N_days = 1~5 반복
for n in range(1, 6):
    seg_n = seg_df[seg_df['N_days'] == n]
    portfolio = {}  # 현재 보유 종목
    trades = []

    # 날짜별 반복
    for date in value_df['Date'].unique():
        today_df = value_df[value_df['Date'] == date]

        # 매도 평가
        for code in list(portfolio.keys()):
            row = today_df[today_df['Code'] == code]
            if row.empty:
                continue
            stage = row['Stage'].values[0]
            sell_flag = True

            for ind in seg_n[seg_n['Stage'] == stage]['indicator'].unique():
                if ind in row.columns:
                    val = row[ind].values[0]
                    segs = seg_n[(seg_n['Stage'] == stage) & (seg_n['indicator'] == ind)]
                    for _, seg in segs.iterrows():
                        if seg['seg_lo'] <= val <= seg['seg_hi']:
                            sell_flag = False
                            break
                if not sell_flag:
                    break

            if sell_flag:
                buy_price = portfolio[code]['price']
                sell_price = row['Close'].values[0]
                trades.append((code, buy_price, sell_price))
                del portfolio[code]

        # 매수 평가
        for _, row in today_df.iterrows():
            code = row['Code']
            if code in portfolio:
                continue
            stage = row['Stage']
            buy_flag = False

            for ind in seg_n[seg_n['Stage'] == stage]['indicator'].unique():
                if ind in row:
                    val = row[ind]
                    segs = seg_n[(seg_n['Stage'] == stage) & (seg_n['indicator'] == ind)]
                    for _, seg in segs.iterrows():
                        if seg['seg_lo'] <= val <= seg['seg_hi']:
                            buy_flag = True
                            break
                if buy_flag:
                    break

            if buy_flag:
                portfolio[code] = {'price': row['Close']}

    # 마지막 날 보유 종목 정리
    last_date = value_df['Date'].max()
    last_df = value_df[value_df['Date'] == last_date]
    for code in portfolio:
        row = last_df[last_df['Code'] == code]
        if not row.empty:
            buy_price = portfolio[code]['price']
            sell_price = row['Close'].values[0]
            trades.append((code, buy_price, sell_price))

    # 성과 계산
    returns = [(s - b) / b for _, b, s in trades]
    win_rate = sum([1 for r in returns if r > 0]) / len(returns) if returns else 0
    avg_return = sum(returns) / len(returns) if returns else 0
    total_return = sum(returns)

    results.append({
        'N_days': n,
        'Trades': len(trades),
        'WinRate (%)': round(win_rate * 100, 2),
        'AvgReturn (%)': round(avg_return * 100, 2),
        'TotalReturn (%)': round(total_return * 100, 2)
    })

# 6. 결과 출력
result_df = pd.DataFrame(results)
print(result_df)